{% extends 'base.html.twig' %}

{% block body %}
    <h4>Orders</h4>
    <div class="row">
        <div class="input-field col s6">
            <input id="customerFilter" type="text" class="validate">
            <label for="customerFilter">Filter by Customer</label>
        </div>
        <div class="input-field col s6">
            <select id="statusFilter">
                <option value="" selected>All Statuses</option>
                <option value="Completed">Completed</option>
                <option value="Pending">Pending</option>
                <option value="Shipped">Shipped</option>
                <option value="Cancelled">Cancelled</option>
            </select>
            <label for="statusFilter">Filter by Status</label>
        </div>
    </div>

    <table class="striped" id="orderTable">
        <thead>
        <tr>
            <th><a href="#" class="sort" data-column="id" data-order="asc">ID</a></th>
            <th><a href="#" class="sort" data-column="customer" data-order="asc">Customer</a></th>
            <th><a href="#" class="sort" data-column="total" data-order="asc">Total</a></th>
            <th><a href="#" class="sort" data-column="status" data-order="asc">Status</a></th>
        </tr>
        </thead>
        <tbody>
        </tbody>
    </table>

    <div class="pagination">
        <button id="prevPage" class="btn">Previous</button>
        <span id="currentPage">Page 1</span>
        <button id="nextPage" class="btn">Next</button>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            let currentPage = 1;
            let currentSort = 'id';
            let currentOrder = 'asc';

            var elems = document.querySelectorAll('select');
            M.FormSelect.init(elems);

            function loadOrders(page = 1, sort = 'id', order = 'asc', customer = '', status = '') {
                fetch(`/orders/data?page=${page}&sort=${sort}&order=${order}&customer=${customer}&status=${status}`)
                    .then(response => response.json())
                    .then(data => {
                        const tableBody = document.querySelector('#orderTable tbody');
                        tableBody.innerHTML = '';
                        data.orders.forEach(order => {
                            const row = `
                            <tr>
                                <td>${order.id}</td>
                                <td>${order.customer}</td>
                                <td>$${order.total.toFixed(2)}</td>
                                <td>${order.status}</td>
                            </tr>
                        `;
                            tableBody.insertAdjacentHTML('beforeend', row);
                        });

                        document.querySelector('#currentPage').textContent = `Page ${data.page}`;
                        currentPage = data.page;

                        document.querySelector('#prevPage').disabled = data.page === 1;
                        document.querySelector('#nextPage').disabled = data.page >= data.pages;
                    })
                    .catch(error => console.error('Error fetching data:', error));
            }

            loadOrders();

            document.querySelector('#prevPage').addEventListener('click', function(event) {
                event.preventDefault();
                if (currentPage > 1) {
                    loadOrders(currentPage - 1, currentSort, currentOrder, getCustomerFilter(), getStatusFilter());
                }
            });

            document.querySelector('#nextPage').addEventListener('click', function(event) {
                event.preventDefault();
                loadOrders(currentPage + 1, currentSort, currentOrder, getCustomerFilter(), getStatusFilter());
            });

            document.querySelectorAll('.sort').forEach(function(column) {
                column.addEventListener('click', function(event) {
                    event.preventDefault();
                    const sortColumn = column.getAttribute('data-column');
                    let sortOrder = column.getAttribute('data-order');

                    sortOrder = sortOrder === 'asc' ? 'desc' : 'asc';
                    column.setAttribute('data-order', sortOrder);

                    currentSort = sortColumn;
                    currentOrder = sortOrder;

                    loadOrders(currentPage, sortColumn, sortOrder, getCustomerFilter(), getStatusFilter());
                });
            });

            function getCustomerFilter() {
                return document.querySelector('#customerFilter').value;
            }

            function getStatusFilter() {
                return document.querySelector('#statusFilter').value;
            }

            document.querySelector('#customerFilter').addEventListener('input', function() {
                loadOrders(currentPage, currentSort, currentOrder, getCustomerFilter(), getStatusFilter());
            });

            document.querySelector('#statusFilter').addEventListener('change', function() {
                loadOrders(currentPage, currentSort, currentOrder, getCustomerFilter(), getStatusFilter());
            });
        });
    </script>
{% endblock %}
